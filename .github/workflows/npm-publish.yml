# Workflow for creating a new release and publishing it to NPM.
name: npm-release-publish

on:
  push:
    tags:
      - v*.*.* # Trigger the workflow on push tag events matching glob (e.g. v1.0, v20.15.10)
    branches:
      - main

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        # Create a local variable containing the pushed tag name
        # (extracted from "refs/tags/{{tagName}}" via parameter expansion)
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: Release ${{ steps.vars.outputs.tag }}
          draft: false
          prerelease: false
        env:
          # GITHUB_TOKEN is automatically provided by actions.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: release # Only run after release workflow has completed
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - name: Clean install of dependencies, build, and test
        # Avoid `yarn.lock` changes.
        run: |
          yarn install --frozen-lockfile
          yarn build
          yarn test
      - name: Upgrade version in package.json to release tag version
        run: yarn version --new-version ${{ github.event.release.tag_name }} --no-git-tag-version
      - name: Publish to NPM via auth token
        run: yarn publish
        env:
          # Ensure NPM_TOKEN is added to repository secrets.
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Configure git and push version changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git push
        env:
          # GITHUB_TOKEN is automatically provided by actions.
          github-token: ${{ secrets.GITHUB_TOKEN }}
