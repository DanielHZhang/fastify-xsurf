# Workflow for creating a new release and publishing it to NPM.
name: npm-release-publish

on:
  release:
    # Trigger the workflow when a release is published (skipping pre-releases)
    types: [released]

jobs:
  publish:
    name: Publish the release to NPM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # "ref": the branch to check out.
          # "github.event.release.target_commitish": the target branch of the release
          ref: ${{ github.event.release.target_commitish }}
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - name: Clean install of dependencies, build, and test
        # Avoid `yarn.lock` changes.
        run: |
          yarn install --frozen-lockfile
          yarn build
          yarn test
      - name: Configure git auth
        # Use bot username and email
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Get tag name without prefix
        id: vars
        uses: actions/github-script@v3
        with:
          script: |
            const tagPath = 'refs/tags/v';
            const tag = context.ref.substring(tagPath.length);
            core.setOutput('tag_name', tag);
      - name: Upgrade version in package.json to release tag version
        run: yarn version --new-version ${{ steps.vars.outputs.tag_name }}
      - name: Publish to NPM via auth token
        run: yarn publish
        env:
          # Ensure NPM_TOKEN is added to repository secrets.
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Push version changes
        run: git push
        env:
          # GITHUB_TOKEN is automatically provided by actions.
          github-token: ${{ secrets.GITHUB_TOKEN }}
